# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "generic/ubuntu2204"

  config.ssh.forward_agent = true

  config.ssh.insert_key = false


  config.vm.provider "libvirt" do |vb|  
    # Customize the amount of memory on the VM:
    vb.memory = "8192"
  end

  config.vm.provision "file", source: "../../../packages/saltcorn-mobile-builder/appium_tests/package.json", destination: "$HOME/tests/package.json"
  config.vm.provision "file", source: "../../../packages/saltcorn-mobile-builder/appium_tests/ui.test.js", destination: "$HOME/tests/ui.test.js"

  config.vm.provision "shell", inline: <<-SHELL
    set -e
    sudo apt update -q
    sudo apt upgrade -qqy

    sudo apt-get -y install libpulse0 pulseaudio libxcursor-dev libxdamage-dev
    sudo apt-get -y install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils

    wget -qO - https://deb.nodesource.com/setup_16.x | bash -
    apt-get install -qqy nodejs
    sudo -iu vagrant npx -y saltcorn-install -s -y -sd

    apt update && apt install -y wget unzip openjdk-17-jdk
    
    cd /home/saltcorn
    sudo -u saltcorn wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
    sudo -u saltcorn unzip commandlinetools-linux-8512546_latest.zip
    sudo -u saltcorn mkdir /home/saltcorn/android_sdk
    yes | sudo -u saltcorn cmdline-tools/bin/sdkmanager --sdk_root=/home/saltcorn/android_sdk --install "cmdline-tools;13.0"
    sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager --list
    sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager "platforms;android-14"
    sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager "emulator" 
    sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager "build-tools;33.0.2"
    sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager "build-tools;34.0.0"

    sudo adduser saltcorn kvm
    yes | sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/sdkmanager "system-images;android-34;google_apis;x86_64"
    echo "no" | sudo -u saltcorn /home/saltcorn/android_sdk/cmdline-tools/13.0/bin/avdmanager create avd --force -n test -k "system-images;android-34;google_apis;x86_64" --device "pixel_xl"

    #sudo -u saltcorn sed -i 's/^disk.dataPartition.size\s*=.*/disk.dataPartition.size=2G/' "/home/saltcorn/.android/avd/test.avd/config.ini"

    npm install -g npm@9.2.0
    sudo -u saltcorn wget https://services.gradle.org/distributions/gradle-8.4-all.zip
    unzip gradle-8.4-all.zip -d /opt
    npm install -g cordova

    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    export ANDROID_SDK_ROOT=/home/saltcorn/android_sdk
    export ANDROID_HOME=/home/saltcorn/android_sdk
    export GRADLE_HOME=/opt/gradle-8.4
    export PATH=$PATH:/opt/gradle-8.4/bin
    export CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL=file\:/home/saltcorn/gradle-8.4-all.zip
    export SALTCORN_NWORKERS=1

    sudo -u saltcorn /home/saltcorn/.local/bin/saltcorn create-user -e user@foo.com -r admin -p foobarbarfoo
    sudo -u saltcorn /home/saltcorn/.local/bin/saltcorn install-pack -n "Address book"
    
    echo "build apk"
    sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/.local/bin/saltcorn build-app -c /home/saltcorn -u "user@foo.com" -p "android" -s "http://10.0.2.2:3000" -b "/home/saltcorn/build_dir" -e "EditMeeting" --includedPlugins markdown
    sudo --preserve-env=SALTCORN_NWORKERS -u saltcorn /home/saltcorn/.local/bin/saltcorn serve -p 3000 &
    set +e

    echo "start emulator"
    sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/emulator/emulator -avd test -memory 3072 -grpc 8554 -partition-size 2047 -no-audio -no-window -no-boot-anim -accel on -gpu auto -no-snapshot-load &
    # sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb wait-for-device
    sleep 500

    echo "install apk"
    sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb -s emulator-5554 install /home/saltcorn/build_dir/platforms/android/app/build/outputs/apk/debug/app-debug.apk
    sleep 20

    echo "start app"
    START_TRY=0
    sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb shell am start -n saltcorn.mobile.app/.MainActivity
    LINES=$(sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb shell ps | grep saltcorn.mobile.app | wc -l)
    while [ $LINES -eq 0 ] && [ $START_TRY -lt 50 ]; do
      let START_TRY++
      sleep 5
      echo "re-try start app"
      sudo --preserve-env=JAVA_HOME,ANDROID_SDK_ROOT,ANDROID_HOME,GRADLE_HOME,PATH,CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb shell am start -n saltcorn.mobile.app/.MainActivity
      LINES=$(sudo -u saltcorn /home/saltcorn/android_sdk/platform-tools/adb shell ps | grep saltcorn.mobile.app | wc -l)
    done

    if [ $LINES -eq 1 ]; then
      echo "success"
    else
      echo "error: Unable to start the app"
      exit 1
    fi

    echo "prepare appium"
    cd /home/saltcorn
    sudo npm install -g appium
    sudo npm install -g appium-chromedriver
    appium driver install uiautomator2
    appium --allow-insecure chromedriver_autodownload &
    sleep 10

    set -e
    echo "run tests"
    cd /home/vagrant/tests
    npm install
    npm run test

    SHELL
  end
